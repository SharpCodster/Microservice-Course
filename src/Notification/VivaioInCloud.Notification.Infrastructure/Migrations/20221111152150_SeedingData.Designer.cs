// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VivaioInCloud.Notification.Infrastructure;

#nullable disable

namespace VivaioInCloud.Notification.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221111152150_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VivaioInCloud.Notification.Entities.Models.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAtUtc")
                        .HasColumnOrder(1000);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("CreatedBy")
                        .HasColumnOrder(1001);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(1004);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAtUtc")
                        .HasColumnOrder(1002);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("UpdatedBy")
                        .HasColumnOrder(1003);

                    b.HasKey("Id");

                    b.ToTable("Contacts", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "13017f42-1786-4d94-9702-6e687f578a47",
                            CreatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "SEEDER",
                            Email = "user1@microsoft.com",
                            IsDeleted = false,
                            Name = "John",
                            Surname = "Doe",
                            UpdatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "SEEDER"
                        },
                        new
                        {
                            Id = "7a63bbf1-4346-4aa7-a273-358f66224527",
                            CreatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "SEEDER",
                            Email = "user2@microsoft.com",
                            IsDeleted = false,
                            Name = "Paul",
                            Surname = "Leen",
                            UpdatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "SEEDER"
                        });
                });

            modelBuilder.Entity("VivaioInCloud.Notification.Entities.Models.UserNotification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAtUtc")
                        .HasColumnOrder(1000);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("CreatedBy")
                        .HasColumnOrder(1001);

                    b.Property<bool>("Delivered")
                        .HasColumnType("boolean")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(1004);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAtUtc")
                        .HasColumnOrder(1002);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("UpdatedBy")
                        .HasColumnOrder(1003);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotifications", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "88ecfb97-e769-478c-ab43-6617a616563b",
                            CreatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "SEEDER",
                            Delivered = true,
                            IsDeleted = false,
                            Message = "Test message",
                            UpdatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "SEEDER",
                            UserId = "13017f42-1786-4d94-9702-6e687f578a47"
                        },
                        new
                        {
                            Id = "6cf186a7-4914-4dcc-b676-c45c998c3c71",
                            CreatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "SEEDER",
                            Delivered = true,
                            IsDeleted = false,
                            Message = "Test Message 2",
                            UpdatedAtUtc = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "SEEDER",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        });
                });

            modelBuilder.Entity("VivaioInCloud.Notification.Entities.Models.UserPreference", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPreferences", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "9598fc44-35ea-4cc9-8740-5982d5b2192a",
                            TypeId = "64ca104f-eb10-4539-9319-c667d1cbdfc0",
                            UserId = "13017f42-1786-4d94-9702-6e687f578a47"
                        },
                        new
                        {
                            Id = "856f98a8-f0c8-4299-9e44-b083595470de",
                            TypeId = "a5475794-16f9-4c66-9e39-9e48d94941b9",
                            UserId = "13017f42-1786-4d94-9702-6e687f578a47"
                        },
                        new
                        {
                            Id = "4107308d-4bd2-44cf-824f-f8dafe02bffa",
                            TypeId = "64ca104f-eb10-4539-9319-c667d1cbdfc0",
                            UserId = "13017f42-1786-4d94-9702-6e687f578a47"
                        },
                        new
                        {
                            Id = "33d25f4c-2e88-4a7c-9bd0-0498332e9a15",
                            TypeId = "210bec9a-b503-41cc-b95b-4de49191175a",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "9d02f944-b1e3-41e8-89c0-e6507be198c2",
                            TypeId = "235d0b4b-5046-4759-8e7d-d60873e1f7e8",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "f11f51b1-33b6-49fe-a20e-a959221d7f5f",
                            TypeId = "32781f4c-381a-449a-a16b-3c57690d599a",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "ef1e8568-48b8-4eb4-802b-ebb270185fef",
                            TypeId = "46981d42-de4a-4084-8aae-6ddff896434c",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "9cfad8e0-84e8-47db-8d43-3f025eebfa74",
                            TypeId = "572c7be0-bfdc-4ae9-a056-ad568df6a4bc",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "fce90719-cae6-4a1f-a3ad-e29e3aee2442",
                            TypeId = "64ca104f-eb10-4539-9319-c667d1cbdfc0",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "c3ee743d-d8c1-4e2f-b85a-65b97defb885",
                            TypeId = "67d10465-8b17-479a-9859-83d16b11dd84",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "c2b74088-7458-4a68-a092-a22a2323cce0",
                            TypeId = "7da220d3-70ef-424d-9bfd-bfd4d290664d",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "bdb88ebe-9af2-43c9-b873-e9ce4cc400a3",
                            TypeId = "9cf6ab99-7a88-40b2-8d19-23868dcafd03",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "a8258483-4717-40c2-b669-4d1167f54c5c",
                            TypeId = "a50108a3-aa1a-4ed8-aed6-500b906830c9",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "fc73e8d5-3f06-40e8-88a7-d10a4c7e22c5",
                            TypeId = "a5475794-16f9-4c66-9e39-9e48d94941b9",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "b9456542-7e0a-4126-96c1-bc894f708541",
                            TypeId = "ba4a9ede-54eb-4768-875f-36da8a6d94bc",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "611543e5-c9fa-4aa5-a8e9-5329aa49e28d",
                            TypeId = "cdcd18a8-9df4-4224-984d-e8d0ffe2ad2b",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "58ea9fc4-1c83-448c-879a-34eda5bda428",
                            TypeId = "ce826748-979b-4e75-b79a-37b11e19dedf",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        },
                        new
                        {
                            Id = "4bdc9d4f-20ed-4613-91e8-c7d7081aff9a",
                            TypeId = "d68fb54d-0369-488b-8d16-38970ff26896",
                            UserId = "7a63bbf1-4346-4aa7-a273-358f66224527"
                        });
                });

            modelBuilder.Entity("VivaioInCloud.Notification.Entities.Models.UserNotification", b =>
                {
                    b.HasOne("VivaioInCloud.Notification.Entities.Models.Contact", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VivaioInCloud.Notification.Entities.Models.UserPreference", b =>
                {
                    b.HasOne("VivaioInCloud.Notification.Entities.Models.Contact", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VivaioInCloud.Notification.Entities.Models.Contact", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("UserPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
